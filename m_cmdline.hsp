/***********************************************************

	コマンドライン解析モジュール（cHspComp専用）

		【依存モジュール】

			gm_record_str.hsp
			gm_rmquote.hsp


		【関数一覧】

			任意のオプションが指定されているかチェック

			#defcfunc chkopt	str optchar
				// optchar	: チェック対象のオプション文字
				// 戻り値	: TRUE(1) or FALSE(0)


			指定したインデックスの引数を取得

			#defcfunc getarg	int argi, int rmquote_flag
				// argi			: 引数インデックス（first=0 / オプション指定文字列を除く）
				// rmquote_flag	: 引数が""に囲まれていた場合にそれを削除するかどうか（1(yes) or 0(no)）
				// 戻り値		: 引数文字列

***********************************************************/

#include "gm_record_str.hsp"
#include "gm_rmquote.hsp"

#module cmdline

	#define	CMDLINE_DELIMITER	" "
	#define	CHAR_DQUOT			"\""
	#define	CHAR_CODE_OPTION	'/'
	#const	TRUE				1
	#const	FALSE				0

/**********************************************************/
// コマンドライン解析（モジュール末尾で呼び出し済み）
/**********************************************************/
#deffunc parse_cmdline
	_args		= ""
	_options	= ""

	/* コマンドライン項目を取得 */
	sdim	items, 2, 2
	prms	= dirinfo(4), CMDLINE_DELIMITER, CHAR_DQUOT, RECORD_STR_ALL@
	split	prms, items

	/* 引数とオプション文字列を取得 */
	repeat	length(items)
		if cnt = 0 {
			byte	= peek(items(cnt), 0)
			if byte = CHAR_CODE_OPTION {
				tmpstr		= ""
				getstr 		tmpstr,items(cnt),1		// オプション指定文字列を取得
				_options	+= tmpstr
				continue
			}
		}
		_args(_argc)	= items(cnt)		; 通常引数を取得
		_argc ++
	loop
	return

/**********************************************************/
// 任意のオプションが指定されているかチェック
/**********************************************************/
#defcfunc chkopt str optchar
	if instr(_options, , optchar) > -1 {
		return	TRUE
	}
	return	FALSE

/**********************************************************/
// 指定したインデックスの引数を取得
/**********************************************************/
#defcfunc getarg int argi, int rmquote_flag
	if argi < _argc {
		arg	= _args(argi)
		if rmquote_flag {
			rmquote	arg, TYPE_DQUOTE@
		}
		return	arg
	}
	return	""

/**********************************************************/
#global

parse_cmdline