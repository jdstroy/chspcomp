/***********************************************************

	HRTアイコン書き換え用モジュール

		【2007/08/18 更新】

		【命令一覧】

		HRTファイルのアイコンを書き換え（既存のアイコンは削除）

			#deffunc update_hrt_icon str hrtpath_, array ico_paths_

				hrtpath_	: HRTファイルパス
							  今のところ、hsprt, hsp3c.hrt, hsp3hg.hrtにのみ対応

				ico_paths_	: 追加するアイコンファイルパスの配列
							  指定できるアイコンファイルは1ファイル1アイコンのもののみ

***********************************************************/
#ifndef	__M_HRT_ICON__
#define	global	__M_HRT_ICON__

#include "kernel32.as"

#module

	#const	GETPATH_REMDIR		8	// ディレクトリ情報を取り除く
	#const	GETPATH_LOWCASE		16	// 文字列を小文字に変換する

	#const	ERROR_HRT_NOT_EXIST		1
	#const	ERROR_ICO_NOT_EXIST		2
	#const	ERROR_NULL_HANDLE		-1
	#const	RESULT_OK				0

	#const	TRUE	1
	#const	FALSE	0
	#const	NULL	0

	#const	RT_ICON					3		; アイコン
	#const	RT_GROUP_ICON			14		; グループアイコン

	#const	HSPEXE_ICON_ID			1		; デフォルトの実行ファイルアイコンのID
	#const	HSPEXE_GROUPICON_ID		128		; デフォルトのGROUP_ICONリソースのID
	#const	LANG_ID_EN			1033
	#const	LANG_ID_JP			1041

	#const	RSRCTYPE_ICON			1

	#const	ICONDIR_BASE_SIZE		6
	#const	ICONDIR_RESERVED_OFFSET	0
	#const	ICONDIR_TYPE_OFFSET		2
	#const	ICONDIR_COUNT_OFFSET	4
	#const	ICONDIRENTRY_SIZE		16
	#const	ICONDIR_TALBLE_SIZE		(ICONDIR_BASE_SIZE + ICONDIRENTRY_SIZE)
	#const	GRPICONDIRENTRY_SIZE	14

	;変数、ユーザ定義命令・関数　命名規則
	;
	;	外部から呼んではいけない命令・関数		_???
	;	命令・関数のパラメータ					???_
	;	戻り値用パラメータ						ret_???_

	/*****************************************************************/
	/* HRTファイルからICON系リソースを削除（RT_ICON, RT_GROUP_ICON） */
	/*****************************************************************/
	#deffunc _remove_hrt_icon str hrtpath_
	
		hrtpath_1	= hrtpath_
		hrtname		= getpath(getpath(hrtpath_1, GETPATH_REMDIR), GETPATH_LOWCASE)
	
		/* パスチェック */
		exist	hrtpath_1
		if strsize = -1 {
			return	ERROR_HRT_NOT_EXIST
		}
	
		/* 操作するリソースの言語ID指定 */
		if (instr(hrtname,, "hsprt") > -1) | (instr(hrtname,, "hsp3c.hrt") > -1) {
			lang_id	= LANG_ID_EN
		}
		else {
			lang_id	= LANG_ID_JP
		}

		/* リソース更新 */
		BeginUpdateResource	hrtpath_1, FALSE
		hfile	= stat
		if hfile = NULL {
			return	ERROR_NULL_HANDLE
		}
		UpdateResource	hfile, RT_ICON,			HSPEXE_ICON_ID,			lang_id, NULL, 0
		UpdateResource	hfile, RT_GROUP_ICON,	HSPEXE_GROUPICON_ID,	lang_id, NULL, 0
		EndUpdateResource	hfile, FALSE;TRUE(cancel)
		
		return	RESULT_OK

	/**************************************************************/
	/* ICOファイルからリソース形式アイコンとICONDIRENTRYを取得 */
	/**************************************************************/
	#deffunc _get_icon_rsrc_and_icondir str ico_path_, var ret_icon_, var ret_icon_size_, var ret_identry_

		ico_path	= ico_path_

		/* パスチェック */
		exist	ico_path
		ico_size	= strsize
		if (ico_size = -1) {
			return	ERROR_ICO_NOT_EXIST
		}

		/* ICOファイル読み込み */
		sdim	ico_buf, (ico_size + 1)
		bload	ico_path, ico_buf, ico_size

		/* アイコンリソースのサイズを取得 */
		ret_icon_size_	= (ico_size - ICONDIR_TALBLE_SIZE)

		/* ICONDIRテーブルと切り離して返す */
		sdim	ret_identry_,	(GRPICONDIRENTRY_SIZE + 1)
		sdim	ret_icon_,		(ret_icon_size_ + 1)
		memcpy	ret_identry_,	ico_buf, GRPICONDIRENTRY_SIZE,	0, ICONDIR_BASE_SIZE
		wpoke	ret_identry_,	(GRPICONDIRENTRY_SIZE - 2),		0
		memcpy	ret_icon_,		ico_buf, ret_icon_size_,		0, ICONDIR_TALBLE_SIZE

		return	RESULT_OK

	/*****************************************/
	/* HRTファイルにアイコン系リソースを追加 */
	/*****************************************/
	#deffunc update_hrt_icon str hrtpath_, array ico_paths_

		ret_update	= RESULT_OK
		hrtpath_2	= hrtpath_

		/* パスチェック */
		exist	hrtpath_2
		if strsize = -1 {
			return	ERROR_HRT_NOT_EXIST
		}

		/* HRTファイルからICON系リソースを削除 */
		_remove_hrt_icon	hrtpath_2

		/* 操作するリソースの言語ID指定 */
		hrtname		= getpath(getpath(hrtpath_2, GETPATH_REMDIR), GETPATH_LOWCASE)
		if (instr(hrtname,, "hsprt") > -1) | (instr(hrtname,, "hsp3c.hrt") > -1) {
			lang_id	= LANG_ID_EN
		}
		else {
			lang_id	= LANG_ID_JP
		}

		/* GRPICONDIR用変数初期化 */
		id_count		= 0
		id_entries		= ""
		id_entries_size	= 0

		repeat	length(ico_paths_)
			/* ICOファイルからリソース形式のアイコンとICONDIRENTRYを取得 */
			ico_path_1	= ico_paths_(cnt)
			_get_icon_rsrc_and_icondir	ico_path_1, icon, icon_size, identry
			if (stat = ERROR_ICO_NOT_EXIST) {
				ret_update	= ERROR_ICO_NOT_EXIST
				continue
			}

			/* アイコンID */
			icon_id	= (cnt + 1)
		
			/* GRPICONDIR用変数更新 */
			id_count ++

			sdim	buf_1, (id_entries_size + 1)
			memcpy	buf_1, id_entries, id_entries_size, 0, 0	; 一時退避
			size_1	= id_entries_size

			wpoke	identry, (GRPICONDIRENTRY_SIZE - 2), icon_id

			id_entries_size	+= GRPICONDIRENTRY_SIZE
			sdim	id_entries,	(id_entries_size + 1)
			memcpy	id_entries,	buf_1,		size_1,					0, 0
			memcpy	id_entries,	identry,	GRPICONDIRENTRY_SIZE,	size_1, 0
		
			/* HRTファイルにアイコンリソースを追加 */
			BeginUpdateResource	hrtpath_2, FALSE
			hfile	= stat
			if (hfile = NULL) {
				ret_update	= ERROR_NULL_HANDLE
				continue
			}
			UpdateResource	hfile, RT_ICON,	icon_id, lang_id, varptr(icon), icon_size
			EndUpdateResource	hfile, FALSE;TRUE(cancel);
		loop

		/* HRTファイルにGROUP_ICONリソース（GRPICONDIR）を追加 */
		sdim	grpicondir, (ICONDIR_BASE_SIZE + id_entries_size + 1)
		wpoke	grpicondir, ICONDIR_RESERVED_OFFSET,	0
		wpoke	grpicondir, ICONDIR_TYPE_OFFSET,		RSRCTYPE_ICON
		wpoke	grpicondir, ICONDIR_COUNT_OFFSET,		id_count
		memcpy	grpicondir, id_entries, id_entries_size, ICONDIR_BASE_SIZE, 0
		grpicondir_size	= (ICONDIR_BASE_SIZE + id_entries_size)

		BeginUpdateResource	hrtpath_2, FALSE
		hfile	= stat
		if (hfile = NULL) {
			ret_update	= ERROR_NULL_HANDLE
			return
		}
		UpdateResource	hfile, RT_GROUP_ICON, HSPEXE_GROUPICON_ID, lang_id, varptr(grpicondir), grpicondir_size
		EndUpdateResource	hfile, FALSE;TRUE(cancel);

		return	ret_update

#global

#endif
